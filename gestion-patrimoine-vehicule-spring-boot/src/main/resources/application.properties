server.port=8082
## Connect to Database
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.url=jdbc:postgresql://localhost:5433/DLF_PATRIMOINE
#spring.datasource.url=jdbc:postgresql://postgres.ck2r24f5e7ku.eu-north-1.rds.amazonaws.com/DLF_PATRIMOINE
#/?createDatabaseIfNotExist=true&useSSL=true

spring.datasource.username=postgres
spring.datasource.password=postgres

#spring.datasource.driver-class-name=org.postgresql.Driver
#spring.datasource.url=jdbc:postgresql://localhost:5432/base
#spring.datasource.username=postgres
#spring.datasource.password=123

## Configure JPA
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation= true
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

#    create :
#    Hibernate va créer le schéma de base de données à chaque démarrage de l'application.
#    Cela signifie que les tables seront supprimées et recréées à chaque redémarrage. Les données existantes seront perdues.
#    update :
#    Hibernate va mettre à jour le schéma de base de données si nécessaire, mais ne le recréera pas complètement.
#    Il ajoutera des colonnes, des tables, etc., si elles sont manquantes, mais ne supprimera pas les tables ou les colonnes qui ne sont plus nécessaires.
#    validate :
#    Hibernate va valider le schéma de base de données, mais ne le mettra pas à jour.
#    Il vérifiera si les tables et les colonnes nécessaires existent, mais ne fera aucune modification.
#    none :
#    Hibernate ne gérera pas automatiquement la création ou la mise à jour du schéma.
#    Cela suppose que le schéma de base de données est déjà créé et est conforme aux entités JPA.


#keycloak.realm=gestion-patrimoine
#keycloak.resource=gestion-patrimoine
#keycloak.bearer-only=true
#keycloak.auth-server-url=http://localhost:8080
#keycloak.ssl-required=none



spring.security.oauth2.resourceserver.jwt.jwk-set-uri = http://localhost:8080/realms/gestion-patrimoine/protocol/openid-connect/certs